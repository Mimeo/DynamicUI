# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:        
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Install GitVersion
      run: dotnet tool install GitVersion.Tool --global --version 5.*

    - name: GitVersion
      id: gitversion
      run: dotnet-gitversion -output file -outputfile version_info.json

    - name: Grab version
      run: |  
          VERSION=$(jq -r '.MajorMinorPatch' version_info.json)
          BRANCH_NAME=$(jq -r '.EscapedBranchName' version_info.json)
          PRE_RELEASE_NUMBER=$(jq -r '.PreReleaseNumber' version_info.json)          
          FINAL_VERSION="${VERSION}-${BRANCH_NAME}.${PRE_RELEASE_NUMBER}"
          echo "semver=$FINAL_VERSION" >> "$GITHUB_ENV"
          echo "semver_prd=$VERSION" >> "$GITHUB_ENV"

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore -c Release

    - name: Pack DynamicUI
      run: dotnet pack Mimeo.DynamicUI/Mimeo.DynamicUI.csproj --no-restore -c Release -o nuget -p:Version=${{ semver }}

    - name: Pack DynamicUI.Blazor
      run: dotnet pack Mimeo.DynamicUI.Blazor/Mimeo.DynamicUI.Blazor.csproj --no-restore -c Release -o nuget -p:Version=${{ semver }}
    
    - name: Upload nuget packages as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: nuget
        path: nuget

    - name: Test
      run: dotnet test --no-build --verbosity normal -c Release
      
